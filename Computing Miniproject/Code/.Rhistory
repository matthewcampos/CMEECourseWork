species_data <- filter(LGrowthData, Species==s) #uses dplyr to group by species
medium <- unique(species_data$Medium) #collects the unique growth mediums
for (m in medium){
medium_data <- filter(species_data, Medium==m) #then grouped by growth medium
temperature <- unique(medium_data$Temp) #find unique temperatures
for (t in temperature){
temp_data <- filter(medium_data, Temp==t) #then grouped by temperature
citation <- unique(temp_data$Citation) #find unique citation
pdf(paste("../Results/",s,m,".pdf")) #open pdf
#par(mfrow=c(2,2))
for (c in citation){
c_data <- filter(temp_data, Citation==c) #finally group by citation to get overall unique ID
plot(c_data$Time, temp_data$PopBio, xlab="Time", ylab="Abundance", log="y", main=paste(s,m,t, sep = "\n"))
mtext(c, side = 3, cex = 0.5) #adds citation at the top
}
mtext(c_data$PopBio_units, side = 2, line = 2, cex = 0.75) #adds pop_bio units to the elft
dev.off() #close pdf file
}
}
}
warnings()
for (s in species){
species_data <- filter(LGrowthData, Species==s) #uses dplyr to group by species
medium <- unique(species_data$Medium) #collects the unique growth mediums
for (m in medium){
medium_data <- filter(species_data, Medium==m) #then grouped by growth medium
temperature <- unique(medium_data$Temp) #find unique temperatures
for (t in temperature){
temp_data <- filter(medium_data, Temp==t) #then grouped by temperature
citation <- unique(temp_data$Citation) #find unique citation
pdf(paste("../Results/",s,m,".pdf")) #open pdf
#par(mfrow=c(2,2))
for (c in citation){
c_data <- filter(temp_data, Citation==c) #finally group by citation to get overall unique ID
plot(c_data$Time, temp_data$PopBio, xlab="Time", ylab="Abundance", log="y", main=paste(s,m,t, sep = "\n"))
mtext(c, side = 3, cex = 0.25) #adds citation at the top
}
mtext(c_data$PopBio_units, side = 2, line = 2, cex = 0.75) #adds pop_bio units to the elft
dev.off() #close pdf file
}
}
}
warnings()
min(LGrowthData)
min(LGrowthData$PopBio)
pdf(paste("../Results/SpeciesID.pdf")) #open pdf
for (s in species){
species_data <- filter(LGrowthData, Species==s) #uses dplyr to group by species
medium <- unique(species_data$Medium) #collects the unique growth mediums
for (m in medium){
medium_data <- filter(species_data, Medium==m) #then grouped by growth medium
temperature <- unique(medium_data$Temp) #find unique temperatures
for (t in temperature){
temp_data <- filter(medium_data, Temp==t) #then grouped by temperature
citation <- unique(temp_data$Citation) #find unique citation
#par(mfrow=c(2,2))
for (c in citation){
c_data <- filter(temp_data, Citation==c) #finally group by citation to get overall unique ID
plot(c_data$Time, temp_data$PopBio, xlab="Time", ylab="Abundance", log="y", main=paste(s,m,t, sep = "\n"))
mtext(c, side = 3, cex = 0.25) #adds citation at the top
}
mtext(c_data$PopBio_units, side = 2, line = 2, cex = 0.75) #adds pop_bio units to the elft
}
}
}
dev.off() #close pdf file
Log_Eq <- function(N0,K,r,t){
y = (x * Nmax * exp(r*t))/(Nmax * + x * (exp(r*t)-1))
}
Log_Eq <- function(x,Nmax,K,r,t){
y = (x * Nmax * exp(r*t))/(Nmax * + x * (exp(r*t)-1))
}
Log_Eq <- function(x,k,r,t){
y = (x *  * exp(r*t))/(k * + x * (exp(r*t)-1))
}
Log_Eq <- function(x,k,r,t){
y = (x * k * exp(r*t))/(k * + x * (exp(r*t)-1))
}
plot(Log_Eq(1,20,0.5,20))
t <- c(1:20)
plot(t,Log_Eq(1,20,0.5,20))
Log_Eq <- function(x,k,r){
y = (x * k * exp(r*t))/(k * + x * (exp(r*t)-1))
}
t <- c(1:20)
plot(t,Log_Eq(1,20,0.5))
Log_Eq <- function(x,k,r,t){
y = (x * k * exp(r*t))/(k * + x * (exp(r*t)-1))
}
y <- Log_Eq(1,20,0.5,t)
y
plot(t,y)
t
length(t)
length(y)
plot(t,y)
graphics.off()
plot(t,y)
Log_Eq <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k * + N0 * (exp(r*t)-1))
}
y <- Log_Eq(1,20,0.5,t)
y
graphics.off()
plot(t,y)
Log_Eq <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
t <- c(1:20)
y <- Log_Eq(1,20,0.5,t)
y
plot(t,y)
#function of logistic growth equation
par(mfrow=c(2,2))
Log_Eq <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
t <- c(1:20)
y <- Log_Eq(1,20,1,t)
plot(t,y)
Log_Eq <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
t <- c(1:20)
y <- Log_Eq(1,20,1,t)
plot(t,y)
Log_Eq <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
t <- c(1:20)
y <- Log_Eq(1,20,5,t)
plot(t,y)
y <- Log_Eq(1,20,0.5,t)
plot(t,y, main=r)
y <- Log_Eq(N0=1,k=20,r=0.5,t)
plot(t,y, main=r)
r=0.5
y <- Log_Eq(1,20,0.5,t)
r=0.5
plot(t,y, main=r)
y <- Log_Eq(1,20,1,t)
r=1
plot(t,y, main=r)
y <- Log_Eq(1,20,1,t)
r=1
plot(t,y, main="r is",r)
y <- Log_Eq(1,20,1,t)
r=1
plot(t,y, main="r is"r)
y <- Log_Eq(1,20,1,t)
r=1
plot(t,y, main="r is"+r)
y <- Log_Eq(1,20,1,t)
r=1
plot(t,y, main="r is"+str(r))
t <- c(1:20)
r=5
y <- Log_Eq(1,20,r,t)
plot(t,y, main=r)
k=50
y <- Log_Eq(1,k,0.5,t)
plot(t,y, main=r+k)
k=50
y <- Log_Eq(1,k,0.5,t)
plot(t,y, main=r,k)
r
r=0.5
y <- Log_Eq(1,k,0.5,t)
plot(t,y, main=k)
k=100
r=0.5
y <- Log_Eq(1,k,r,t)
plot(t,y, main=k)
k=100000
r=0.5
y <- Log_Eq(1,k,r,t)
plot(t,y, main=k)
k=1000
r=0.5
y <- Log_Eq(1,k,r,t)
plot(t,y, main=k)
Log_Eq <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
Gompertz_model <- function(N0,k,r,t){
y = (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
Baryani_model <- function(h0,N0,k,r,t){
y <- N0 + (r * t) + ((1/r) * log(exp(-r*t)+exp(-h0)-exp((-r*t)-h0))) -
log(1 + (exp(r*t)+(1/r) * log(exp(-r*t)+exp(-h0)-exp((-r*t)-h0))-1)/(exp(k-N0)))
}
t <- c(1:20)
t <- c(1:20)
h0 <- 0.1
N0 <- 1
k <- 10
r <- 0.5
y <- Baryani_model(h0,N0,k,r,t)
y
plot(t,y)
t <- c(1:20)
h0 <- 0.1
N0 <- 1
k <- 10
r <- 1
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:20)
h0 <- 0.1
N0 <- 0.1
k <- 10
r <- 1
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:20)
h0 <- 0.1
N0 <- 0.1
k <- 10
r <- 0.1
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.1
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 2
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 1
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.5
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.3
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.5
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.8
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 1
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.5
N0 <- 0.1
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.5
N0 <- 5
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 10
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 50
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 25
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 40
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 100
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 100
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 5
k <- 5
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 1
k <- 5
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 1
k <- 50
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 1
k <- 20
r <- 0.25
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 1
k <- 20
r <- 0.5
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
t <- c(1:100)
h0 <- 0.2
N0 <- 1
k <- 20
r <- 1
y <- Baryani_model(h0,N0,k,r,t)
plot(t,y)
Logistic_model <- function(N0,k,r,t){
y <- (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1))
}
Logistic_model <- function(N0,k,r,t){
return(y <- (N0 * k * exp(r*t))/(k + N0 * (exp(r*t)-1)))
}
Baryani_model <- function(h0,N0,k,r,t){
return(y <- N0 + (r * t) + ((1/r) * log(exp(-r*t)+exp(-h0)-exp((-r*t)-h0))) -
log(1 + (exp(r*t)+(1/r) * log(exp(-r*t)+exp(-h0)-exp((-r*t)-h0))-1)/(exp(k-N0))))
}
Gompertz_model <- function(tlag,N0,k,r,t){
A <- log(k/N0)
return(y <- A * exp(-exp(((r * exp(1) * (tlag - t))/A) + 1)))
}
tlag <- 0.8
N0 <- 5
k <- 20
r <- 0.5
t <- c(1:100)
Gompertz_model(tlag,N0,k,r,t)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 0.8
N0 <- 5
k <- 20
r <- 0.25
t <- c(1:100)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 0.8
N0 <- 5
k <- 20
r <- 0.25
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 1
N0 <- 5
k <- 20
r <- 0.25
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 5
N0 <- 5
k <- 20
r <- 0.25
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 5
N0 <- 5
k <- 20
r <- 1
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 5
N0 <- 5
k <- 100
r <- 0.5
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 5
N0 <- 5
k <- 1000
r <- 0.5
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 5
N0 <- 15
k <- 1000
r <- 0.5
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
tlag <- 15
N0 <- 5
k <- 1000
r <- 0.5
t <- c(1:20)
y<-Gompertz_model(tlag,N0,k,r,t)
plot(t,y)
Quadratic_model_2nd_deg <- function(A,B,C){
return(y <- A + (B * t) + (B * t^2))
}
t <- c(1:20)
Quadratic_model_2nd_deg <- function(A,B,C,t){
return(y <- A + (B * t) + (C * t^2))
}
A = 1
B = 1
C = 1
y <- Quadratic_model_2nd_deg(A,B,C,t)
plot(t,y)
t <- c(1:20)
A = 1
B = 5
C = 5
y <- Quadratic_model_2nd_deg(A,B,C,t)
plot(t,y)
t <- c(1:100)
A = 1
B = 5
C = 5
y <- Quadratic_model_2nd_deg(A,B,C,t)
plot(t,y)
Quadratic_model_3rd_deg <- function(A,B,C,D,t){
return(y <- A + (B * t) + (C * t^2) + (D * t^3))
}
Quadratic_model_4th_deg <- function(A,B,C,D,E,t){
return(y <- A + (B * t) + (C * t^2) + (D * t^3) + (E * t^4))
}
par(mfrow=c(2,2))
t <- c(1:100)
A = 1
B = 1
C = 1
D = 1
E = 1
plot(t,Quadratic_model_2nd_deg(A,B,C,t))
plot(t,Quadratic_model_3rd_deg(A,B,C,D,t))
plot(t,Quadratic_model_4th_deg(A,B,C,D,E,t))
Buchanan_model <- function(){
return(N0 + (t >= tlag) * (t <= (tlag + (k - N0) * log(10)/r)) *
r * (t - tlag)/log(10) + (t >= tlag) *
(t > (tlag + (k - N0) * log(10)/r)) * (k - N0))
}
